Textbook Floyd-Warshall algorithm.

#include <bits/stdc++.h>
using namespace std;
using ll = long long;
const ll INF = 4e18;
ll d[501][501];
int main(){
    ios::sync_with_stdio(0);
    cin.tie(0);
    int n,m,q;
    cin>>n>>m>>q;
    for(int i=1;i<=n;i++)
        for(int j=1;j<=n;j++)
            d[i][j]=(i==j?0:INF);
    while(m--){
        int a,b; ll c;
        cin>>a>>b>>c;
        d[a][b]=min(d[a][b],c);
        d[b][a]=min(d[b][a],c);
    }
    for(int k=1;k<=n;k++)
        for(int i=1;i<=n;i++)
            for(int j=1;j<=n;j++)
                if(d[i][k]+d[k][j]<d[i][j])
                    d[i][j]=d[i][k]+d[k][j];
    while(q--){
        int a,b;
        cin>>a>>b;
        ll x=d[a][b];
        cout<<(x==INF?-1:x)<<"\n";
    }
    return 0;
}
