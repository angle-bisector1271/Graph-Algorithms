Textbook Kahn's algorithm. DP[Node] = SUM{1+DP[V] ; V has a directed edge to Node}.

#include <bits/stdc++.h>
using namespace std;
int main(){
    ios::sync_with_stdio(false);
    cin.tie(NULL);

    int n; cin>>n;
    vector<int> d(n+1);
    vector<vector<int>> r(n+1);
    vector<long long> s(n+1);
    for(int i=2,b;i<=n;i++){
        cin>>b;
        r[i].push_back(b);
        d[b]++;
    }
    queue<int> q;
    for(int i=1;i<=n;i++) if(d[i]==0) q.push(i);
    while(!q.empty()){
        int u=q.front(); q.pop();
        for(int p:r[u]){
            s[p]+=s[u]+1;
            if(--d[p]==0) q.push(p);
        }
    }
    for(int i=1;i<=n;i++){
        cout<<s[i]<<(i==n?'\n':' ');
    }
    return 0;
}
