Textbook Djikstra's algorithm.

#include<bits/stdc++.h>
using namespace std;
#define int long long

int32_t main() {
    ios::sync_with_stdio(false);
    cin.tie(nullptr);

    int n, m;
    cin >> n >> m;
    vector<set<pair<int, int>>> adj(n);
    for (int i = 0; i < m; ++i) {
        int u,v,x;
        cin >> u >> v >> x;
        --u; --v;
        adj[u].insert({v, x});
    }
    vector<int> dist(n, __LONG_LONG_MAX__);
    dist[0] = 0;
    set<pair<int, int>> pq;
    pq.insert({0, 0}); 

    while (!pq.empty()){
        auto& {d,u}=*pq.begin();
        pq.erase(pq.begin());
        if (d>dist[u]) continue;
        for (auto& [v, x] : adj[u]){
            if (dist[v]=min(dist[v],dist[u]+x);
        }

    }
    

    for (int i = 0; i < n; ++i) {
        if (dist[i] == __LONG_LONG_MAX__) {
            cout << "INF\n";
        } else {
            cout << dist[i] << " ";
        }
    }

    return 0;
}
